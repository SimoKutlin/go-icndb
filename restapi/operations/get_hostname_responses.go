// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/baez90/go-icndb/models"
)

// GetHostnameOKCode is the HTTP code returned for type GetHostnameOK
const GetHostnameOKCode int = 200

/*GetHostnameOK Got hostname

swagger:response getHostnameOK
*/
type GetHostnameOK struct {

	/*
	  In: Body
	*/
	Payload *models.HostnameResponse `json:"body,omitempty"`
}

// NewGetHostnameOK creates GetHostnameOK with default headers values
func NewGetHostnameOK() *GetHostnameOK {

	return &GetHostnameOK{}
}

// WithPayload adds the payload to the get hostname o k response
func (o *GetHostnameOK) WithPayload(payload *models.HostnameResponse) *GetHostnameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hostname o k response
func (o *GetHostnameOK) SetPayload(payload *models.HostnameResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostnameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostnameInternalServerErrorCode is the HTTP code returned for type GetHostnameInternalServerError
const GetHostnameInternalServerErrorCode int = 500

/*GetHostnameInternalServerError Failed to get hostname

swagger:response getHostnameInternalServerError
*/
type GetHostnameInternalServerError struct {
}

// NewGetHostnameInternalServerError creates GetHostnameInternalServerError with default headers values
func NewGetHostnameInternalServerError() *GetHostnameInternalServerError {

	return &GetHostnameInternalServerError{}
}

// WriteResponse to the client
func (o *GetHostnameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
