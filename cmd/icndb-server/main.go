// Code generated by go-swagger; DO NOT EDIT.

package main

import (
	"github.com/baez90/go-icndb/restapi"
	"github.com/baez90/go-icndb/restapi/operations"
	"github.com/go-openapi/loads"
	log "github.com/sirupsen/logrus"
	"os"
	"github.com/jessevdk/go-flags"
)

// This file was generated by the swagger tool.
// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func main() {

	log.Info("Setting up ICNDB service ...")
	log.Info("Loading API definition ...")
	swaggerSpec, err := loads.Embedded(restapi.SwaggerJSON, restapi.FlatSwaggerJSON)
	if err != nil {
		log.Fatalln(err)
	}

	api := operations.NewICNDBAPI(swaggerSpec)
	server := restapi.NewServer(api)
	defer server.Shutdown()

	log.Info("Loading & configuring flags ...")
	parser := flags.NewParser(server, flags.Default)
	parser.ShortDescription = "ICNDB"
	parser.LongDescription = "ICNDB sample API for ITB"

	server.ConfigureFlags()
	for _, optsGroup := range api.CommandLineOptionsGroups {
		_, err := parser.AddGroup(optsGroup.ShortDescription, optsGroup.LongDescription, optsGroup.Options)
		if err != nil {
			log.Fatalln(err)
		}
	}

	if _, err := parser.Parse(); err != nil {
		code := 1
		if fe, ok := err.(*flags.Error); ok {
			if fe.Type == flags.ErrHelp {
				code = 0
			}
		}
		os.Exit(code)
	}

	log.Info("Configuring API ...")
	server.ConfigureAPI()

	log.Info("Firing up server ...")
	if err := server.Serve(); err != nil {
		log.Fatalln(err)
	}
	log.Info("Server up and running, ready to answer requests!")



}
